---
import { ViewTransitions } from 'astro:transitions';
import {  getRelativeLocaleUrlList, getRelativeLocaleUrl } from 'astro:i18n';
import Header from '@components/Header.astro';
import Footer from '@components/Footer.astro';

interface Props {
	title: string;
	description?: string;
	includeFooter?: boolean;
	mainMenu?: boolean;
}

const { title, 
		description = "Un estudio de diseño y desarrollo web en Barcelona",
		includeFooter = true,
		mainMenu = true
	} = Astro.props;

const currentPath = Astro.url.pathname;
const { currentLocale } = Astro;
---

<!doctype html>
<html lang={currentLocale}>
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content={description} />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<link rel="alternate" hreflang="ca-ES" href="https://studiomoare.com/ca">
		<link rel="alternate" hreflang="es-ES" href="https://studiomoare.com/">
		<title>{title} - Studio Moaré</title>
		<meta property="og:locale" content={currentLocale}>
		<meta property="og:title" content={title}>
		<meta property="og:title" content={description}>
		<meta property="og:url" content=`https://studiomoare.com${currentPath}`>
		<meta property="og:site_name" content="Studio Moaré">
		<meta property="og:image" content="https://studiomoare.com/studio-moare.webp">
		<ViewTransitions />
	</head>
	<body>
		<Header includeMainMenu={mainMenu} />
		<slot />
		{includeFooter && <Footer />}
	</body>
</html>

<style is:global>
	body {
		@apply text-m-blue bg-m-beige dark:text-m-beige dark:bg-m-blue;
	}
	body:has(button.navigation-open) {
		overflow: hidden;
	}
	main a {
		@apply border-b border-dotted;
	}
</style>

<script>
	document.addEventListener('astro:page-load', () => {
		const containerNavMobile = document.getElementById("container-navigation") as HTMLElement;
		const iconClose = document.querySelector(".close") as HTMLElement;
		const iconOpen = document.querySelector(".open") as HTMLElement;
		const body = document.body;
		if(containerNavMobile) {
			document.addEventListener("click", (event) => {
				const target = event.target as HTMLElement;
				if (target.closest(".mobile-dropdown-toggle")) {
					containerNavMobile.classList.toggle("hidden");
					iconClose.classList.toggle("hidden");
					iconOpen.classList.toggle("hidden");
					body.classList.toggle("h-dvh");
					body.classList.toggle("overflow-y-hidden");
				}
			});
			document.addEventListener("click", (event) => {
				const target = event.target as HTMLElement;
				if ( !target.closest("#container-navigation") && !target.closest(".mobile-dropdown-toggle") ) {
					if (!containerNavMobile.classList.contains("hidden")) {
						containerNavMobile.classList.add("hidden");
						iconClose.classList.add("hidden");
						iconOpen.classList.remove("hidden");
						body.classList.remove("overflow-y-hidden");
						body.classList.remove("h-dvh");
					}
				}
				
			});
		}
	});
</script>